#!/usr/bin/env bash
set -Eeuo pipefail

loremPlainText="
Lorem ipsum dolor sit amet, consectetur adipiscing elit.
Quisque pharetra magna vel sapien elementum vulputate. Proin diam justo,
fringilla id tincidunt quis, ultricies elementum arcu. Nam arcu nunc,
pellentesque vel tempus ut, lacinia sed magna. Mauris quis justo vel augue
laoreet sollicitudin vitae sit amet purus. Integer aliquet auctor risus sit
amet dictum. Fusce scelerisque nisl ac aliquam eleifend. Sed id urna sed nibh
auctor suscipit sit amet eu mauris. Quisque eleifend eu ipsum sed accumsan.
Duis sed malesuada diam, vestibulum facilisis diam. Praesent eu dapibus massa.
"

loremHtml="<p>$loremPlainText</p>"

recipeBody="
<h3>Background Story</h3>
<p>My husband can''t eat chilis so for this Szechuan dish I replaced every single ingredients</p>
<h2>Actual Recipe</h2>
<ol>
<li>Step one</li>
<li>Step two</li>
<li>Step three</li>
</ol>
"
recipeBodyPlainText="
Background Story
My husband can''t eat chilis so for this Szechuan dish I replaced every single ingredients
Actual Recipe

Step one
Step two
Step three
"

for i in {1..10}; do
  recipeBody="$recipeBody$loremHtml"
  recipeBodyPlainText="$recipeBodyPlainText$loremPlainText"
done

foodStuff=(Salad Fish Rice Spaghetti Pizza Hamburger Eggs Cheese Sausages Apple Grape Milk Candy Cookie Pie Cake Cupcake)
foodStuffLength=${#foodStuff[@]}

NEW_LINE=$'\n'

query=""
recipeCount=0

function genRecipes() {
  local isQuick="$1"

  for _ in {1..20}; do
    foodName=""
    for i in {1..3}; do
      maxIndex=$((foodStuffLength - 1))
      foodIndex=$((0 + RANDOM % maxIndex))

      whiteSpace=' '
      if [[ $i = 3 ]]; then
        whiteSpace=''
      fi
      foodName="$foodName${foodStuff[$foodIndex]}$whiteSpace"
    done

    recipeBodyWithName="<p>about $foodName</p>$recipeBody"
    recipeBodyPlainTextWithName="About $foodName$recipeBodyPlainText"
    query="${query}INSERT INTO recipes (name, quick, body_html, body_plain_text) VALUES ('$foodName', $isQuick, '$recipeBodyWithName', '$recipeBodyPlainTextWithName');$NEW_LINE"
    recipeCount=$((recipeCount + 1))
  done
}

genRecipes true
genRecipes false

if [[ "${1-}" == "--migrate" ]]; then
  cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1
  sqlx migrate --source ../server/migrations run
fi

psql --quiet "$DATABASE_URL" -v "ON_ERROR_STOP=1" <<< "$query"

echo "Generated $recipeCount recipes"
